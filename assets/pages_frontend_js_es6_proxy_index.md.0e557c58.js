import{_ as e,o as a,c as o,O as r}from"./chunks/framework.f58f52c8.js";const _=JSON.parse('{"title":"Proxy","description":"","frontmatter":{},"headers":[],"relativePath":"pages/frontend/js/es6/proxy/index.md","filePath":"pages/frontend/js/es6/proxy/index.md","lastUpdated":1686848132000}'),l={name:"pages/frontend/js/es6/proxy/index.md"},t=r('<h1 id="proxy" tabindex="-1">Proxy <a class="header-anchor" href="#proxy" aria-label="Permalink to &quot;Proxy&quot;">​</a></h1><p><a href="https://es6.ruanyifeng.com/#docs/proxy" target="_blank" rel="noreferrer">https://es6.ruanyifeng.com/#docs/proxy</a></p><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><ul><li>修改操作的默认行为</li><li>在语言层面上进行修改（元编程）</li><li>对编程语言进行编程</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> proxy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Proxy</span><span style="color:#A6ACCD;">(target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="特殊" tabindex="-1">特殊 <a class="header-anchor" href="#特殊" aria-label="Permalink to &quot;特殊&quot;">​</a></h2><p>如果属性不可配置且不可写，则<code>Proxy</code>不能修改该属性，否则报错</p><h2 id="proxy支持拦截的操作" tabindex="-1">Proxy支持拦截的操作 <a class="header-anchor" href="#proxy支持拦截的操作" aria-label="Permalink to &quot;Proxy支持拦截的操作&quot;">​</a></h2><ol><li>get</li><li>set</li><li>apply</li><li>has</li><li>construct</li><li>deleteProperty</li><li>defineProperty</li><li>getOwnPropertyDescriptor</li><li>getPrototypeOf</li><li>isExtensible</li><li>ownKeys</li><li>preventExtensions</li><li>setPrototypeOf</li></ol><h2 id="可取消的proxy实例" tabindex="-1">可取消的Proxy实例 <a class="header-anchor" href="#可取消的proxy实例" aria-label="Permalink to &quot;可取消的Proxy实例&quot;">​</a></h2><p>Proxy.revocable</p><h2 id="应用" tabindex="-1">应用 <a class="header-anchor" href="#应用" aria-label="Permalink to &quot;应用&quot;">​</a></h2><p>Proxy对象可以拦截目标对象任意属性，所以适合做Web服务的客户端</p>',14),s=[t];function n(i,p,c,d,h,y){return a(),o("div",null,s)}const u=e(l,[["render",n]]);export{_ as __pageData,u as default};
